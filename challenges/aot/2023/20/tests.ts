import { Expect, Equal } from 'type-testing';

// prettier-ignore
type Letters = {
  A: [
    '█▀█ ',
    '█▀█ ',
    '▀ ▀ ',
  ],
  B: [
    '█▀▄ ',
    '█▀▄ ',
    '▀▀  '
  ],
  C: [
    '█▀▀ ',
    '█ ░░',
    '▀▀▀ '
  ],
  E: [
    '█▀▀ ',
    '█▀▀ ',
    '▀▀▀ '
  ],
  H: [
    '█ █ ',
    '█▀█ ',
    '▀ ▀ '
  ],
  I: [
    '█ ',
    '█ ',
    '▀ '
  ],
  M: [
    '█▄░▄█ ',
    '█ ▀ █ ',
    '▀ ░░▀ '
  ],
  N: [
    '█▄░█ ',
    '█ ▀█ ',
    '▀ ░▀ '
  ],
  P: [
    '█▀█ ',
    '█▀▀ ',
    '▀ ░░'
  ],
  R: [
    '█▀█ ',
    '██▀ ',
    '▀ ▀ '
  ],
  S: [
    '█▀▀ ',
    '▀▀█ ',
    '▀▀▀ '
  ],
  T: [
    '▀█▀ ',
    '░█ ░',
    '░▀ ░'
  ],
  Y: [
    '█ █ ',
    '▀█▀ ',
    '░▀ ░'
  ],
  W: [
    '█ ░░█ ',
    '█▄▀▄█ ',
    '▀ ░ ▀ '
  ],
  ' ': [
    '░',
    '░',
    '░'
  ],
  ':': [
    '★',
    '░',
    '★'
  ],
  '*': [
    '░',
    '★',
    '░'
  ]

};

type cases = [
  Expect<
    Equal<
      ToAsciiArt<'   * : * Merry * : *   \n  Christmas  '>,
      [
        '░░░░░★░░░█▄░▄█ █▀▀ █▀█ █▀█ █ █ ░░░★░░░░░',
        '░░░★░░░★░█ ▀ █ █▀▀ ██▀ ██▀ ▀█▀ ░★░░░★░░░',
        '░░░░░★░░░▀ ░░▀ ▀▀▀ ▀ ▀ ▀ ▀ ░▀ ░░░░★░░░░░',
        '░░█▀▀ █ █ █▀█ █ █▀▀ ▀█▀ █▄░▄█ █▀█ █▀▀ ░░',
        '░░█ ░░█▀█ ██▀ █ ▀▀█ ░█ ░█ ▀ █ █▀█ ▀▀█ ░░',
        '░░▀▀▀ ▀ ▀ ▀ ▀ ▀ ▀▀▀ ░▀ ░▀ ░░▀ ▀ ▀ ▀▀▀ ░░',
      ]
    >
  >,
  Expect<
    Equal<
      ToAsciiArt<'  Happy new  \n  * : * : * Year * : * : *  '>,
      [
        '░░█ █ █▀█ █▀█ █▀█ █ █ ░█▄░█ █▀▀ █ ░░█ ░░',
        '░░█▀█ █▀█ █▀▀ █▀▀ ▀█▀ ░█ ▀█ █▀▀ █▄▀▄█ ░░',
        '░░▀ ▀ ▀ ▀ ▀ ░░▀ ░░░▀ ░░▀ ░▀ ▀▀▀ ▀ ░ ▀ ░░',
        '░░░░★░░░★░░░█ █ █▀▀ █▀█ █▀█ ░░░★░░░★░░░░',
        '░░★░░░★░░░★░▀█▀ █▀▀ █▀█ ██▀ ░★░░░★░░░★░░',
        '░░░░★░░░★░░░░▀ ░▀▀▀ ▀ ▀ ▀ ▀ ░░░★░░░★░░░░',
      ]
    >
  >,
  Expect<
    Equal<
      ToAsciiArt<'  * : * : * : * : * : * \n  Trash  \n  * : * : * : * : * : * '>,
      [
        '░░░░★░░░★░░░★░░░★░░░★░░░',
        '░░★░░░★░░░★░░░★░░░★░░░★░',
        '░░░░★░░░★░░░★░░░★░░░★░░░',
        '░░▀█▀ █▀█ █▀█ █▀▀ █ █ ░░',
        '░░░█ ░██▀ █▀█ ▀▀█ █▀█ ░░',
        '░░░▀ ░▀ ▀ ▀ ▀ ▀▀▀ ▀ ▀ ░░',
        '░░░░★░░░★░░░★░░░★░░░★░░░',
        '░░★░░░★░░░★░░░★░░░★░░░★░',
        '░░░░★░░░★░░░★░░░★░░░★░░░',
      ]
    >
  >,
  Expect<
    Equal<
      ToAsciiArt<'  : * : * : * : * : * : * : \n  Ecyrbe  \n  : * : * : * : * : * : * : '>,
      [
        '░░★░░░★░░░★░░░★░░░★░░░★░░░★░',
        '░░░░★░░░★░░░★░░░★░░░★░░░★░░░',
        '░░★░░░★░░░★░░░★░░░★░░░★░░░★░',
        '░░█▀▀ █▀▀ █ █ █▀█ █▀▄ █▀▀ ░░',
        '░░█▀▀ █ ░░▀█▀ ██▀ █▀▄ █▀▀ ░░',
        '░░▀▀▀ ▀▀▀ ░▀ ░▀ ▀ ▀▀  ▀▀▀ ░░',
        '░░★░░░★░░░★░░░★░░░★░░░★░░░★░',
        '░░░░★░░░★░░░★░░░★░░░★░░░★░░░',
        '░░★░░░★░░░★░░░★░░░★░░░★░░░★░',
      ]
    >
  >,
];
