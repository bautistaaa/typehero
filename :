'use client';
import { Billboard, Edges, Image, OrbitControls, PerspectiveCamera, Text } from '@react-three/drei';
import { Canvas, extend, type BufferGeometryProps, useFrame } from '@react-three/fiber';
import { useRef } from 'react';
import { type PerspectiveCamera as PerspectiveCameraType } from 'three';
import { geometry } from 'maath';
import { useScroll } from 'framer-motion';

declare module '@react-three/fiber' {
  interface ThreeElements {
    roundedPlaneGeometry: any;
  }
}
extend({ RoundedPlaneGeometry: geometry.RoundedPlaneGeometry });

export function Stage() {
  return (
    <Canvas>
      <color args={['ivory']} />
      <Experience />
    </Canvas>
  );
}

function Experience() {
  const cameraRef = useRef<PerspectiveCameraType>(null);
  const { scrollY } = useScroll();
  useFrame(() => {
    if (cameraRef.current === null) return;

    const progress = scrollY.get() / 250;
    cameraRef.current.position.y = 4 + progress * -5;
    cameraRef.current.lookAt(0, 2, 0);
  });

  const userInfo = {
    username: '@dca123',
  } as const;
  return (
    <>
      <PerspectiveCamera makeDefault position={[0, 0, 4]} ref={cameraRef} zoom={1} />
      <OrbitControls />
      <group scale={1.5}>
        <Platform x={-1} height={1.6} userInfo={userInfo} />
        <Platform x={0} height={2} userInfo={userInfo} />
        <Platform x={1} height={1.2} userInfo={userInfo} />
      </group>
    </>
  );
}
const imageUrl = 'https://avatars.githubusercontent.com/u/3579142?v=4';
function Platform(props: { x: number; height: number; userInfo: { username: string } }) {
  return (
    <group position-x={props.x}>
      <Billboard lockZ={true} position-y={props.height} position-z={0.25} scale={0.7}>
        {/* <Image url={imageUrl}> */}
        {/*   <roundedPlaneGeometry args={[1, 1, 0.1]} /> */}
        {/* </Image> */}
      </Billboard>
      <mesh position-y={(props.height - 1) / 2}>
        <boxGeometry args={[1, props.height, 1]} />
        <meshBasicMaterial color="black" />
        <Edges linewidth={1} color="white" />
      </mesh>
      <Text fontSize={0.1} position-y={props.height - 0.7} position-z={0.51}>
        {props.userInfo.username}
      </Text>
    </group>
  );
}
